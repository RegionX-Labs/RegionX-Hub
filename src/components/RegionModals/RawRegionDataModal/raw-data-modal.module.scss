@use '../../../styles/mixins' as *;

.modalOverlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10010;
  padding: 16px; // keeps space on tiny screens
  @include Inter;
}

/* Match your Assign modal sizing */
.modalContent {
  background: var(--dark-background-2);
  border: 1px solid var(--border-modal);
  border-radius: 16px;
  box-shadow: 0 18px 44px rgba(0, 0, 0, 0.55);
  width: 30%; /* compact width like Assign */
  max-width: 90%;
  max-height: 82vh; /* prevent overflow */
  padding: 18px 18px 14px;
  display: flex;
  flex-direction: column;

  @media (max-width: 510px) {
    width: 80%;
  }
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 10px;
  border-bottom: 1px solid var(--border-modal);

  h2 {
    color: var(--text-primary);
    font-size: 16px; /* slightly smaller */
    font-weight: 700;
    margin: 0;
  }
}

.closeIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 28px;
  width: 28px;
  border-radius: 8px;
  border: 1px solid var(--border-modal);
  background: transparent;
  color: var(--text-primary);
  cursor: pointer;
  transition: background 0.15s ease;

  &:hover {
    background: var(--dark-background-1);
  }
}

/* Scrollable inner area */
.bodyScroll {
  overflow: auto;
  padding-top: 10px;
  padding-bottom: 6px;
}

/* Text + key/values are compact */
.subText {
  color: var(--text-primary);
  font-size: 12.5px;
  margin: 0 0 10px;
  line-height: 2.5;
}

.kvGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 8px;
  margin-bottom: 10px;
}

.kvRow {
  display: flex;
  justify-content: space-between;
  gap: 8px;
  padding: 8px 10px;
  background: var(--dark-background-1);
  border: 1px solid var(--border-modal);
  border-radius: 10px;

  span {
    color: var(--text-secondary);
    font-size: 11px;
    letter-spacing: 0.06em;
    text-transform: uppercase;
  }

  code {
    color: var(--text-primary);
    font-family:
      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', monospace;
    font-size: 11.5px;
    word-break: break-all;
  }
}

.jsonBlock {
  border: 1px solid var(--border-modal);
  border-radius: 12px;
  background: var(--dark-background-1);
}

.jsonHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 10px;
  border-bottom: 1px solid var(--border-modal);
  font-weight: 600;
  color: var(--text-primary);
  font-size: 12.5px;
}

.copyBtn {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  background: transparent;
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: 5px 10px;
  color: var(--text-primary);
  cursor: pointer;
  font-size: 12px;

  &:hover {
    border-color: var(--text-secondary);
  }
}

/* JSON is scrollable, not growing modal */
.pre {
  margin: 0;
  padding: 10px;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', monospace;
  font-size: 11.5px;
  line-height: 1.4;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 32vh;
  overflow: auto;
}

.actions {
  display: flex;
  gap: 10px;
  justify-content: flex-end;
  margin-top: 10px;
}

.primaryBtn,
.secondaryBtn {
  height: 38px;
  padding: 0 12px;
  border-radius: 10px;
  font-size: 14px;
  cursor: pointer;
}

.primaryBtn {
  background-color: var(--green-primary);
  color: var(--text-primary);
  border: 0.1px solid var(--border-modal);

  &:hover {
    background-color: var(--accent-green-hover);
  }
}

.secondaryBtn {
  background: var(--dark-background-1);
  color: var(--text-primary);
  border: 1px solid var(--border-modal);

  &:hover {
    background: var(--dark-background-4);
  }
}

/* Tiny screens: make actions wrap and buttons full width if needed */
@media (max-width: 360px) {
  .actions {
    flex-direction: column-reverse;
  }
  .primaryBtn,
  .secondaryBtn {
    width: 100%;
  }
}
