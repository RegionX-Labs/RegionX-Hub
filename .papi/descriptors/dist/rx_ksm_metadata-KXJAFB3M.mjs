// .papi/descriptors/src/rx_ksm_metadata.ts
var binMeta = "";
var rx_ksm_metadata_default = binMeta;
export {
  rx_ksm_metadata_default as default
};
